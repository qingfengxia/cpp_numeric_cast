# this CI only test C and C++ code
sudo: required
# C and C++ code will be only tested on this branch, before merge to master
branches:
  only:
  - master
  - dev

language: c++
matrix:
  include:
    # 64-bit gcc with C++17
    - os: linux
      dist: bionic
      addons:
        apt:
          packages:
            - libboost-dev
            - cmake
            - g++
            - lcov
      env:
        - GCS_TAG=ubuntu_cpp17
      install:
        - echo "nothing is needed here, PWD = $PWD"
      script:
        # enable c++17 
        - mkdir build && cd build && CODE_COVERAGE=ON CMAKE_CXX_STANDARD=17 cmake .. && make
        - bash ../scripts/run_all_tests.sh

      after_success:
        # Create lcov report
        - echo "start coverage collection PWD = ${PWD}"
        - if [ -d build ]; then cd build; fi
        - lcov --capture --directory ./ --output-file coverage.info
        - THIRD_PARTY_DIR=$(realpath ../third-party)
        - lcov --remove coverage.info '/usr/*' '${THIRD_PARTY_DIR}/*' --output-file coverage.info # filter system-files
        - lcov --list coverage.info # debug info
        # Uploading report to CodeCov, you must signup in codecov and set token in repo env var
        - bash <(curl -s https://codecov.io/bash) -f coverage.info || echo "Codecov did not collect coverage reports"
        
    - os: linux
      dist: xenial
      addons:
        apt:
          packages:
            - libboost-dev
            - cmake
            - g++
      env:
        - GCS_TAG=ubuntu_cpp11
      install:
        - echo "nothing is needed here, PWD = $PWD"
      script:
        - mkdir build && cd build && CMAKE_CXX_STANDARD=11 cmake .. && make
        - bash ../scripts/run_all_tests.sh

    # 64-bit macos and llvm
    - os: macos
      osx_image: xcode11.1
      env:
        - GCS_TAG=macos_llvm
      install:
        # todo: boost
        - echo "nothing is needed here, PWD = $PWD"
      script:
        # multi-line command
        - mkdir build && cd build && CMAKE_CXX_STANDARD=14 cmake .. && make
        - bash ../scripts/run_all_tests.sh

