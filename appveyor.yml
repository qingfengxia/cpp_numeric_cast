# adapted from example: 
# https://www.appveyor.com/docs/build-configuration/#build-matrix


# Build worker image (VM template)
# visual studio 2015 is needed for c++ support
image: 
- Visual Studio 2019
- Visual Studio 2015 

platform:
  - x86
  - x64

configuration:
  - Release
  #- Debug

# "Visual Studio 14 2015", _MSC_VER == 1900
environment:
  MSBUILD_FLAGS: /verbosity:minimal /maxcpucount
  # matrix:
  # - env_var1
  # - env_var2
##########################################################
# scripts that are called at very beginning, before repo cloning
init:
  - date /T & time /T
  - git config --global core.autocrlf input
  - cmake --version
  # go to hell Xamarin (see http://help.appveyor.com/discussions/problems/4569)
  #- del "C:\Program Files (x86)\MSBuild\14.0\Microsoft.Common.targets\ImportAfter\Xamarin.Common.targets"
  # Set "build version number" to "short-commit-hash" or when tagged to "tag name" (Travis style)
  - ps: >-
      if ($env:APPVEYOR_REPO_TAG -eq "true")
      {
        Update-AppveyorBuild -Version "$env:APPVEYOR_REPO_TAG_NAME"
      }
      else
      {
        Update-AppveyorBuild -Version "dev-$($env:APPVEYOR_REPO_COMMIT.substring(0,7))"
      }

branches:
  only:
  - master

clone_depth: 5

version: '{build}'

matrix:
  fast_finish: true

for:
  - 
    matrix:
      only:
        - image: Visual Studio 2015
    environment:
      cmake_generator: "Visual Studio 14" 
    
  - 
    matrix:
      only:
        - image: Visual Studio 2019
    environment:
      cmake_generator: "Visual Studio 16"
    #- generator: "MinGW Makefiles"
#cache:
#  - c:\project\fifengine-cpp-MyAppDir\dependencies

install:
  # install dep by curl and 7z
  #- curl -LfsS -o libfife.zip https://ci.appveyor.com/api/buildjobs/7xflrp0frgit15u5/artifacts/libfife-dev-c4d5f09-VC14.zip
  #- 7z x libfife.zip -o%APPVEYOR_BUILD_FOLDER%\dependencies -y > nul

# instead of default: build: MSBuild 
build_script:
  - cd %APPVEYOR_BUILD_FOLDER%
  - echo %APPVEYOR_BUILD_FOLDER%
  - dir
  # set compiler var
  - if "%cmake_generator%"=="Visual Studio 14" (set COMPILER="VC14")
  - if "%cmake_generator%"=="Visual Studio 15" (set COMPILER="VC15")
  - if "%cmake_generator%"=="Visual Studio 16" (set COMPILER="VC16")
  - if "%cmake_generator%"=="MinGW Makefiles"  (set COMPILER="MinGW") 
  # create folder for an out-of-source-tree build: "c:\projects\build"
  - cd .. 
  - mkdir build
  - cd build
  # generate build script, todo: MyAppDir should be a variable
  - >
    cmake %APPVEYOR_BUILD_FOLDER%
    -G "%cmake_generator%" 
    -DCMAKE_INSTALL_PREFIX=./MyAppDir
  # build
  - cmake --build . --target ALL_BUILD --config %configuration% -- /nologo /logger:"C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll"
  # install
  - cmake --build . --target INSTALL --config %configuration% -- /nologo
  # package with cpack?
  #- cmake --build ./build --target PACKAGE --config %configuration% -- /nologo

after_build:
  # copy required system libraries from \bin folder into \MyAppDir folder
  #- xcopy %APPVEYOR_BUILD_FOLDER%\MyAppDir\bin\*.* %APPVEYOR_BUILD_FOLDER%\MyAppDir\Tutorial1
  #- rd /s /q %APPVEYOR_BUILD_FOLDER%\MyAppDir\bin

  # switch to project build folder and zip "MyAppDir" folder
  - cd %APPVEYOR_BUILD_FOLDER%
  - 7z a -tzip -mx9 "MyAppDir-%APPVEYOR_BUILD_VERSION%-%COMPILER%.zip" MyAppDir
  # switch to project directory and zip append the "assets" folder if exists
  #- cd %APPVEYOR_BUILD_FOLDER%
  #- 7z a -tzip -mx9 "%APPVEYOR_BUILD_FOLDER%\MyAppDir-%APPVEYOR_BUILD_VERSION%-%COMPILER%.zip" assets
  # finally, push the MyAppDir artifact, it must be cached dir
  #- cd %APPVEYOR_BUILD_FOLDER%
  #- appveyor PushArtifact "MyAppDir-%APPVEYOR_BUILD_VERSION%-%COMPILER%.zip"
